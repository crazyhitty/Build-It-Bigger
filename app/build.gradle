apply plugin: 'com.android.application'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        free {
            applicationIdSuffix ".free"
            buildConfigField "String", "APP_VARIANT", "\"free\""
        }
        paid {
            applicationIdSuffix ".paid"
            buildConfigField "String", "APP_VARIANT", "\"paid\""
        }
    }
    dataBinding {
        enabled = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    // Added for AdMob
    compile project(':jokeJavaLib')
    compile project(':jokeAndroidLib')
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.android.support:cardview-v7:24.1.1'
    compile 'com.google.code.findbugs:jsr305:2.0.1'
    testCompile 'junit:junit:4.12'
    freeCompile 'com.google.firebase:firebase-ads:9.2.0'
    compile project(path: ':backend', configuration: 'android-endpoints')
    compile 'io.reactivex:rxandroid:1.2.1'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex:rxjava:1.1.6'
}

// source: http://stackoverflow.com/a/31441508
task startGoogleAppEngineTesting(dependsOn: ":backend:appengineRun") {
    project(":backend").afterEvaluate { backend ->
        backend.extensions.appengine.daemon = true
    }
    doLast {
        println "Started google app engine server!"
    }
}

task runInstrumentationTests(dependsOn: ":app:connectedAndroidTest") {
    doLast {
        println "Executed instrumentation tests!"
    }
}

task stopAppEngine(dependsOn: ":backend:appengineStop") {
    doLast {
        println "Stopped google app engine server!"
    }
}

startGoogleAppEngineTesting.finalizedBy runInstrumentationTests
runInstrumentationTests.finalizedBy stopAppEngine

apply plugin: 'com.google.gms.google-services'